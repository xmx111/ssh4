<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置</description>

	<!-- shiro cache using Redis 
	<bean id="shiroRedisManager" class="org.crazycake.shiro.RedisManager">
		<property name="host" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="expire" value="1800" />
	</bean>

	<bean id="shiroCacheManager" class="org.crazycake.shiro.RedisCacheManager">
		<property name="redisManager" ref="shiroRedisManager" />
	</bean>
	-->
	
    <!-- shiro cache using EhCache 设置depends-on="cacheManager"，确保共享模式下优先加载Spring CacheManager -->
	<bean id="shiroCacheManager" class="lab.s2jh.core.security.SharedEhCacheManager" depends-on="cacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache-config.xml" />
		<property name="shared" value="true" />
	</bean>

	<bean id="shiroJdbcRealm" class="lab.s2jh.core.security.ShiroJdbcRealm">
		<property name="passwordService" ref="passwordService" />
		<property name="userService" ref="userService" />
	</bean>

	<bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
		<property name="authenticationStrategy">
			<bean class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy" />
		</property>
	</bean>

	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="authenticator" ref="authenticator" />
		<property name="realms">
			<list>
				<ref bean="shiroJdbcRealm" />
			</list>
		</property>
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>

	<bean id="anyRolesAuthorizationFilter" class="lab.s2jh.core.security.AnyRolesAuthorizationFilter" />

	<bean id="wwwJcaptchaFormAuthenticationFilter" class="lab.s2jh.core.security.JcaptchaFormAuthenticationFilter">
		<property name="loginUrl" value="/w/login" />
		<property name="successUrl" value="/w" />
		<property name="userService" ref="userService" />
	</bean>

	<bean id="mobileJcaptchaFormAuthenticationFilter" class="lab.s2jh.core.security.JcaptchaFormAuthenticationFilter">
		<property name="loginUrl" value="/m/login" />
		<property name="successUrl" value="/m" />
		<property name="userService" ref="userService" />
	</bean>

	<bean id="adminJcaptchaFormAuthenticationFilter" class="lab.s2jh.core.security.JcaptchaFormAuthenticationFilter">
		<property name="loginUrl" value="/admin/login" />
		<property name="successUrl" value="/admin" />
		<property name="userService" ref="userService" />
	</bean>


	<bean id="appFormAuthenticationFilter" class="lab.s2jh.core.security.JcaptchaFormAuthenticationFilter">
		<property name="loginUrl" value="/app/login" />
		<property name="userService" ref="userService" />
	</bean>

	<bean id="appBasicAuthenticationFilter" class="lab.s2jh.core.security.AppBasicAuthenticationFilter">
		<property name="appKeySecrets">
			<props>
				<prop key="aqbx_app_android">${aqbx_app_android}</prop>
				<prop key="aqbx_app_ios">${aqbx_app_ios}</prop>
				<prop key="aqbx_app_weixin">${aqbx_app_weixin}</prop>
				<prop key="aqbx_api_jenkins">${aqbx_api_jenkins}</prop>
			</props>
		</property>
	</bean>

	<bean id="bearerTokenAuthenticatingFilter" class="lab.s2jh.core.security.BearerTokenAuthenticatingFilter">

	</bean>

	<bean id="wwwLogoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/w" />
	</bean>

	<bean id="mobileLogoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/m" />
	</bean>

	<bean id="adminLogoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/admin" />
	</bean>

	<bean id="appLogoutFilter" class="lab.s2jh.core.security.AppLogoutFilter">
		<property name="userService" ref="userService" />
	</bean>
	
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="filters">
			<map>
				<entry key="anyRoles" value-ref="anyRolesAuthorizationFilter" />
				<entry key="authcWww" value-ref="wwwJcaptchaFormAuthenticationFilter" />
				<entry key="authcMobile" value-ref="mobileJcaptchaFormAuthenticationFilter" />
				<entry key="authcA" value-ref="adminJcaptchaFormAuthenticationFilter" />
				<entry key="authcBearerToken" value-ref="bearerTokenAuthenticatingFilter" />
				<entry key="authcAppSecret" value-ref="appBasicAuthenticationFilter" />
				<entry key="authcAppForm" value-ref="appFormAuthenticationFilter" />
				<entry key="logoutWww" value-ref="wwwLogoutFilter" />
				<entry key="logoutMobile" value-ref="mobileLogoutFilter" />
				<entry key="logoutAdmin" value-ref="adminLogoutFilter" />
				<entry key="logoutApp" value-ref="appLogoutFilter" />
			</map>
		</property>
		<property name="securityManager" ref="securityManager" />
		<!--  
		anon	org.apache.shiro.web.filter.authc.AnonymousFilter
		authc	org.apache.shiro.web.filter.authc.FormAuthenticationFilter
		authcBasic	org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter
		logout	org.apache.shiro.web.filter.authc.LogoutFilter
		noSessionCreation	org.apache.shiro.web.filter.session.NoSessionCreationFilter
		perms	org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter
		port	org.apache.shiro.web.filter.authz.PortFilter
		rest	org.apache.shiro.web.filter.authz.HttpMethodPermissionFilter
		roles	org.apache.shiro.web.filter.authz.RolesAuthorizationFilter
		ssl	org.apache.shiro.web.filter.authz.SslFilter
		user	org.apache.shiro.web.filter.authc.UserFilter
		-->
		<property name="filterChainDefinitions">
			<value>
				/assets/** = anon

				/w/login = authcWww
				/w/logout = logoutWww
				/w* = anon

				/m/login = authcMobile
				/m/logout = logoutMobile
				/m/** = authcBearerToken,anon

				/admin/login = authcA
				/admin/logout = logoutAdmin
				/admin** = authcA,anyRoles[ROLE_MGMT_USER]
				/druid/** = authcA,anyRoles[ROLE_SUPER_USER]

				/app/login = authcAppForm
				/app/logout = logoutApp
				/app/** = authcAppSecret,authcBearerToken

				/api/** = authcAppSecret
			</value>
		</property>
	</bean>
</beans>